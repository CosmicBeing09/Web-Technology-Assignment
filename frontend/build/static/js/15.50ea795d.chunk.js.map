{"version":3,"sources":["../node_modules/reactstrap/es/CardGroup.js","views/pages/Login/Login.js"],"names":["propTypes","tag","className","string","cssModule","object","props","Tag","attributes","classes","createElement","defaultProps","Login","useForm","register","handleSubmit","errors","onSubmit","data","a","alert","JSON","stringify","formdata","FormData","append","Blob","type","processData","contentType","cache","fetch","method","body","then","res","json","catch","error","console","response","localStorage","setItem","Container","Row","Col","md","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","autoComplete","name","innerRef","required","email","password","xs","Button","color","style","width","to","active","tabIndex"],"mappings":"gPAMIA,EAAY,CACdC,IAAK,IACLC,UAAW,IAAUC,OACrBC,UAAW,IAAUC,QAMnB,EAAY,SAAmBC,GACjC,IAAIJ,EAAYI,EAAMJ,UAClBE,EAAYE,EAAMF,UAClBG,EAAMD,EAAML,IACZO,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,QAE7EG,EAAU,YAAgB,IAAWP,EAAW,cAAeE,GACnE,OAAO,IAAMM,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDN,UAAWO,MAIf,EAAUT,UAAYA,EACtB,EAAUW,aAjBS,CACjBV,IAAK,OAiBQ,Q,iFCiEAW,UAzFf,WAAkB,IAAD,EAE4BC,cAAnCC,EAFO,EAEPA,SAAUC,EAFH,EAEGA,aAAcC,EAFjB,EAEiBA,OAC1BC,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACfC,MAAMC,KAAKC,UAAUJ,EAAM,QACvBK,EAAW,IAAIC,UAETC,OAAO,OAAO,IAAIC,KAAK,CAACL,KAAKC,UAAUJ,IAChD,CACCS,KAAM,mBACNC,aAAa,EAAOC,aAAa,EAAOC,OAAO,KAPlC,SAUXC,MAAM,aAAa,CACvBC,OAAS,OACTC,KAAOV,IAENW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,MACvCJ,MAAK,SAAAM,GAAQ,OAAIC,aAAaC,QAAQ,OAAOrB,KAAKC,UAAUkB,OAhB9C,2CAAH,sDAqBZ,OACE,yBAAKtC,UAAU,mCACb,kBAACyC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK1C,UAAU,0BACb,kBAAC2C,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM7C,UAAU,OACd,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMhC,SAAUF,EAAaE,IAC3B,qCACA,uBAAGf,UAAU,cAAb,2BACA,kBAACgD,EAAA,EAAD,CAAYhD,UAAU,QACpB,kBAACiD,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGnD,UAAU,gBAGjB,kBAACoD,EAAA,EAAD,CAAO3B,KAAK,OAAO4B,YAAY,YAAYC,aAAa,YAAYC,KAAK,QAAQC,SAAU5C,EAAS,CAAE6C,UAAU,MAC/G3C,EAAO4C,OAAS,mBAGnB,kBAACV,EAAA,EAAD,CAAYhD,UAAU,QACpB,kBAACiD,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGnD,UAAU,gBAGjB,kBAACoD,EAAA,EAAD,CAAO3B,KAAK,WAAW4B,YAAY,WAAWC,aAAa,mBAAmBC,KAAK,WAAWC,SAAU5C,EAAS,CAAE6C,UAAU,MAC5H3C,EAAO6C,UAAY,yBAGtB,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKiB,GAAG,KACN,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU9D,UAAU,QAAlC,UAEF,kBAAC2C,EAAA,EAAD,CAAKiB,GAAG,IAAI5D,UAAU,cACpB,kBAAC6D,EAAA,EAAD,CAAQC,MAAM,OAAO9D,UAAU,QAA/B,yBAMV,kBAAC6C,EAAA,EAAD,CAAM7C,UAAU,4CAA4C+D,MAAO,CAAEC,MAAO,QAC1E,kBAAClB,EAAA,EAAD,CAAU9C,UAAU,eAClB,6BACE,uCACA,2JAGE,kBAAC,OAAD,CAAMiE,GAAG,aACT,kBAACJ,EAAA,EAAD,CAAQC,MAAM,UAAU9D,UAAU,OAAOkE,QAAM,EAACC,UAAW,GAA3D","file":"static/js/15.50ea795d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardGroup = function CardGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardGroup.propTypes = propTypes;\nCardGroup.defaultProps = defaultProps;\nexport default CardGroup;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\nimport useForm from 'react-hook-form';\r\n\r\nfunction Login() {\r\n \r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const onSubmit = async(data) => {\r\n    alert(JSON.stringify(data, null));\r\n    var formdata = new FormData();\r\n\r\n     formdata.append(\"user\",new Blob([JSON.stringify(data)],\r\n     {\r\n      type: \"application/json\",\r\n      processData: false, contentType: false, cache: false\r\n  }));\r\n  \r\n  await fetch(`/logintest`,{\r\n    method : 'POST',\r\n    body : formdata\r\n  })\r\n    .then(res => res.json())\r\n    .catch(error => console.error('Error:', error))\r\n    .then(response => localStorage.setItem('user',JSON.stringify(response))\r\n    ); \r\n  };\r\n    \r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"8\">\r\n              <CardGroup>\r\n                <Card className=\"p-4\">\r\n                  <CardBody>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-muted\">Sign In to your account</p>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"icon-user\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"text\" placeholder=\"UserEmail\" autoComplete=\"useremail\" name=\"email\" innerRef={register({ required: true })}/>\r\n                        {errors.email && 'email required.'}\r\n\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-4\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"icon-lock\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name=\"password\" innerRef={register({ required: true })} />\r\n                        {errors.password && 'password is required.'}\r\n\r\n                      </InputGroup>\r\n                      <Row>\r\n                        <Col xs=\"6\">\r\n                          <Button color=\"primary\" className=\"px-4\">Login</Button>\r\n                        </Col>\r\n                        <Col xs=\"6\" className=\"text-right\">\r\n                          <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                  <CardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2>Sign up</h2>\r\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\r\n                        labore et dolore magna aliqua.</p>\r\n                      \r\n                        <Link to=\"/register\">\r\n                        <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\r\n                      </Link>\r\n                      \r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Login;"],"sourceRoot":""}